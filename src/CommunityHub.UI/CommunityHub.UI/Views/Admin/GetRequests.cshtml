@model List<CommunityHub.Core.Dtos.RegistrationRequestDto>

@{
    ViewData["Title"] = "Registration Requests";
}

<style>
    .field-label {
        color: #6c757d; /* Subtle gray color */
        font-style: italic; /* Slight italics for distinction */
        font-size: 0.9em; /* Slightly smaller than normal text */
    }
</style>

<h1>Registration Requests</h1>

<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">ID</th>
            <th scope="col">Requested Date</th>
            <th scope="col">Name</th>
            <th scope="col">Location</th>
            <th scope="col">User Details</th>
            <th scope="col">Spouse Details</th>
            <th scope="col">Children List</th>
            <th scope="col">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var request in Model)
        {
            var userDetails = "";

            if (!string.IsNullOrEmpty(request.RegistrationData.UserDetails.Email))
                userDetails += $"<span class='field-label'>Email:</span> {request.RegistrationData.UserDetails.Email}<br />";

            if (!string.IsNullOrEmpty(request.RegistrationData.UserDetails.ContactNumber))
                userDetails += $"<span class='field-label'>Contact:</span> {request.RegistrationData.UserDetails.CountryCode} - {request.RegistrationData.UserDetails.ContactNumber}<br />";

            if (!string.IsNullOrEmpty(request.RegistrationData.UserDetails.Gender))
                userDetails += $"<span class='field-label'>Gender:</span> {request.RegistrationData.UserDetails.Gender}<br />";

            if (!string.IsNullOrEmpty(request.RegistrationData.UserDetails.MaritalStatus))
                userDetails += $"<span class='field-label'>Marital Status:</span> {request.RegistrationData.UserDetails.MaritalStatus}<br />";

            if (!string.IsNullOrEmpty(request.RegistrationData.UserDetails.HomeTown))
                userDetails += $"<span class='field-label'>Home Town:</span> {request.RegistrationData.UserDetails.HomeTown}<br />";

            if (!string.IsNullOrEmpty(request.RegistrationData.UserDetails.HouseName))
                userDetails += $"<span class='field-label'>House Name:</span> {request.RegistrationData.UserDetails.HouseName}<br />";

            var spouseDetails = "N/A";
            if (request.RegistrationData.SpouseDetails != null)
            {
                spouseDetails = "";

                if (!string.IsNullOrEmpty(request.RegistrationData.SpouseDetails.Email))
                    spouseDetails += $"<span class='field-label'>Email:</span> {request.RegistrationData.SpouseDetails.Email}<br />";

                if (!string.IsNullOrEmpty(request.RegistrationData.SpouseDetails.ContactNumber))
                    spouseDetails += $"<span class='field-label'>Contact:</span> {request.RegistrationData.SpouseDetails.CountryCode} - {request.RegistrationData.SpouseDetails.ContactNumber}<br />";

                if (!string.IsNullOrEmpty(request.RegistrationData.SpouseDetails.HomeTown))
                    spouseDetails += $"<span class='field-label'>Home Town:</span> {request.RegistrationData.SpouseDetails.HomeTown}<br />";

                if (!string.IsNullOrEmpty(request.RegistrationData.SpouseDetails.HouseName))
                    spouseDetails += $"<span class='field-label'>House Name:</span> {request.RegistrationData.SpouseDetails.HouseName}<br />";
            }

            var childrenList = request.RegistrationData.Children != null && request.RegistrationData.Children.Any()
            ? string.Join("<br />", request.RegistrationData.Children)
            : "N/A";

            <tr>
                <td>@request.Id</td>
                <td>@request.CreatedAt.ToString("dd-MM-yyyy")</td>
                <td>@request.RegistrationData.UserDetails.FullName</td>
                <td>@request.RegistrationData.UserDetails.Location</td>
                <td>@Html.Raw(userDetails)</td>
                <td>@Html.Raw(spouseDetails)</td>
                <td>@Html.Raw(childrenList)</td>
                <td>
                    <a href="@Url.Action("ApproveRequest", "Admin", new { id = request.Id })" class="btn btn-success">Approve</a>
                    <a href="@Url.Action("RejectRequest", "Admin", new { id = request.Id })" class="btn btn-danger">Reject</a>
                </td>
            </tr>
        }
    </tbody>
</table>
