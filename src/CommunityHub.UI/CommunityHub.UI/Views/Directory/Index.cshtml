@model List<CommunityHub.Core.Dtos.UserInfoDto>

@section Scripts
{
    <script src="~/js/common-actions.js"></script>
}

@{
    ViewData["Title"] = "Havyaka Family Directory";
    int serial = 1;
}

<h1>Registration Requests</h1>
<hr />

@await Html.PartialAsync("~/Views/Shared/UserInfo/_LocationFilter.cshtml", Model.Select(x => x.Location).ToList())

<div class="mb-3">
    <a href="@Url.Action("SortByLocation", "Admin")" class="btn btn-link">Sort by Location</a>
    <a href="@Url.Action("SortByName", "Admin")" class="btn btn-link">Sort by Name</a>
</div>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-warning">
        <i class="bi bi-info-circle"></i> No pending requests available.
    </div>
}
else
{
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>S.No</th>
                <th>Adults</th>
                <th>Children</th>
                <th>Location</th>
            </tr>
        </thead>
        <tbody id="requestTableBody">
            @foreach (var user in Model)
            {
                <tr class="mainRow">
                    <td>@serial</td>

                    <td>
                        @user.FullName
                        @if (user.SpouseInfo != null)
                        {
                            <br />

                            @user.SpouseInfo.FullName
                        }
                    </td>

                    <td>
                        @if (user.Children.Any())
                        {
                            @foreach (var child in user.Children)
                            {
                                <div>@child.Name</div>
                            }
                        }
                        else
                        {
                        }
                    </td>

                    <td><span class="compact-location">@user.Location</span></td>
                </tr>

                serial++;
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <div class="pagination-container">
        @if (Model.Count > 0)
        {
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("PreviousPage", "Admin")" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    <li class="page-item"><a class="page-link" href="@Url.Action("Page", "Admin", new { page = 1 })">1</a></li>
                    <li class="page-item"><a class="page-link" href="@Url.Action("Page", "Admin", new { page = 2 })">2</a></li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("NextPage", "Admin")" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        }
    </div>
}

<style>
    .compact-location {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100px;
        display: inline-block;
        vertical-align: middle;
    }
</style>
